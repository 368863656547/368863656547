apiVersion: v1
items:
#################### deployments
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: appserver
    name: appserver
    namespace: default
    resourceVersion: "575"
    selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/appserver
    uid: 028cd15d-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: appserver
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: appserver
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver:TAG
          imagePullPolicy: IfNotPresent
          name: appserver
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-03-27T10:52:57Z
      lastUpdateTime: 2018-03-27T10:52:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: database
    name: database
    namespace: default
    resourceVersion: "556"
    selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/database
    uid: 02919106-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: database
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: database
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: atsea
          - name: POSTGRES_PASSWORD_FILE
            value: /run/secrets/postgres_password
          - name: POSTGRES_USER
            value: gordonuser
          image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/database:TAG
          imagePullPolicy: IfNotPresent
          name: database
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-03-27T10:52:57Z
      lastUpdateTime: 2018-03-27T10:52:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: payment-gateway
    name: payment-gateway
    namespace: default
    resourceVersion: "543"
    selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/payment-gateway
    uid: 02980d1a-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: payment-gateway
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: payment-gateway
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway:TAG
          imagePullPolicy: IfNotPresent
          name: payment-gateway
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: payment-token
              path: payment_token
            secretName: secrets
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-03-27T10:52:57Z
      lastUpdateTime: 2018-03-27T10:52:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
#################### replica sets
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: appserver
      pod-template-hash: "976883509"
    name: appserver-fcbdd794f
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: appserver
      uid: 028cd15d-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "573"
    selfLink: /apis/extensions/v1beta1/namespaces/default/replicasets/appserver-fcbdd794f
    uid: 028d86aa-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: appserver
        pod-template-hash: "976883509"
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: appserver
          pod-template-hash: "976883509"
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver:TAG
          imagePullPolicy: IfNotPresent
          name: appserver
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: database
      pod-template-hash: "4248286995"
    name: database-868d6dbff9
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: database
      uid: 02919106-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "555"
    selfLink: /apis/extensions/v1beta1/namespaces/default/replicasets/database-868d6dbff9
    uid: 02925e2a-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: database
        pod-template-hash: "4248286995"
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: database
          pod-template-hash: "4248286995"
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: atsea
          - name: POSTGRES_PASSWORD_FILE
            value: /run/secrets/postgres_password
          - name: POSTGRES_USER
            value: gordonuser
          image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/database:TAG
          imagePullPolicy: IfNotPresent
          name: database
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: extensions/v1beta1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: payment-gateway
      pod-template-hash: "3362313329"
    name: payment-gateway-77b675776f
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: payment-gateway
      uid: 02980d1a-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "542"
    selfLink: /apis/extensions/v1beta1/namespaces/default/replicasets/payment-gateway-77b675776f
    uid: 029a295c-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: payment-gateway
        pod-template-hash: "3362313329"
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: payment-gateway
          pod-template-hash: "3362313329"
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway:TAG
          imagePullPolicy: IfNotPresent
          name: payment-gateway
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: payment-token
              path: payment_token
            secretName: secrets
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
#################### 
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: appserver
    name: appserver
    namespace: default
    resourceVersion: "575"
    selfLink: /apis/apps/v1beta1/namespaces/default/deployments/appserver
    uid: 028cd15d-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: appserver
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: appserver
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver:TAG
          imagePullPolicy: IfNotPresent
          name: appserver
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-03-27T10:52:57Z
      lastUpdateTime: 2018-03-27T10:52:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: database
    name: database
    namespace: default
    resourceVersion: "556"
    selfLink: /apis/apps/v1beta1/namespaces/default/deployments/database
    uid: 02919106-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: database
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: database
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: atsea
          - name: POSTGRES_PASSWORD_FILE
            value: /run/secrets/postgres_password
          - name: POSTGRES_USER
            value: gordonuser
          image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/database:TAG
          imagePullPolicy: IfNotPresent
          name: database
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-03-27T10:52:57Z
      lastUpdateTime: 2018-03-27T10:52:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: payment-gateway
    name: payment-gateway
    namespace: default
    resourceVersion: "543"
    selfLink: /apis/apps/v1beta1/namespaces/default/deployments/payment-gateway
    uid: 02980d1a-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: payment-gateway
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: payment-gateway
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway:TAG
          imagePullPolicy: IfNotPresent
          name: payment-gateway
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: payment-token
              path: payment_token
            secretName: secrets
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2018-03-27T10:52:57Z
      lastUpdateTime: 2018-03-27T10:52:57Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: appserver
      pod-template-hash: "976883509"
    name: appserver-fcbdd794f
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: appserver
      uid: 028cd15d-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "573"
    selfLink: /apis/apps/v1beta2/namespaces/default/replicasets/appserver-fcbdd794f
    uid: 028d86aa-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: appserver
        pod-template-hash: "976883509"
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: appserver
          pod-template-hash: "976883509"
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver:TAG
          imagePullPolicy: IfNotPresent
          name: appserver
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 5005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: database
      pod-template-hash: "4248286995"
    name: database-868d6dbff9
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: database
      uid: 02919106-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "555"
    selfLink: /apis/apps/v1beta2/namespaces/default/replicasets/database-868d6dbff9
    uid: 02925e2a-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: database
        pod-template-hash: "4248286995"
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: database
          pod-template-hash: "4248286995"
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: atsea
          - name: POSTGRES_PASSWORD_FILE
            value: /run/secrets/postgres_password
          - name: POSTGRES_USER
            value: gordonuser
          image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/database:TAG
          imagePullPolicy: IfNotPresent
          name: database
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: postgres-password
              path: postgres_password
            secretName: secrets
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1beta2
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    generation: 1
    labels:
      io.kompose.service: payment-gateway
      pod-template-hash: "3362313329"
    name: payment-gateway-77b675776f
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: payment-gateway
      uid: 02980d1a-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "542"
    selfLink: /apis/apps/v1beta2/namespaces/default/replicasets/payment-gateway-77b675776f
    uid: 029a295c-31ad-11e8-813c-02b0290a3f2c
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: payment-gateway
        pod-template-hash: "3362313329"
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: payment-gateway
          pod-template-hash: "3362313329"
      spec:
        containers:
        - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway:TAG
          imagePullPolicy: IfNotPresent
          name: payment-gateway
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/secrets
            name: secrets-mount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: secrets-mount
          secret:
            defaultMode: 420
            items:
            - key: payment-token
              path: payment_token
            secretName: secrets
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"appserver-fcbdd794f","uid":"028d86aa-31ad-11e8-813c-02b0290a3f2c","apiVersion":"extensions","resourceVersion":"486"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        appserver'
    creationTimestamp: 2018-03-27T10:52:57Z
    generateName: appserver-fcbdd794f-
    labels:
      io.kompose.service: appserver
      pod-template-hash: "976883509"
    name: appserver-fcbdd794f-hll6n
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: appserver-fcbdd794f
      uid: 028d86aa-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "572"
    selfLink: /api/v1/namespaces/default/pods/appserver-fcbdd794f-hll6n
    uid: 028ef17d-31ad-11e8-813c-02b0290a3f2c
  spec:
    containers:
    - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver:TAG
      imagePullPolicy: IfNotPresent
      name: appserver
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 5005
        protocol: TCP
      resources:
        requests:
          cpu: 100m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/secrets
        name: secrets-mount
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4kb7s
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: ip-172-20-96-228.eu-central-1.compute.internal
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: secrets-mount
      secret:
        defaultMode: 420
        items:
        - key: postgres-password
          path: postgres_password
        secretName: secrets
    - name: default-token-4kb7s
      secret:
        defaultMode: 420
        secretName: default-token-4kb7s
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:52:57Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:53:22Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:52:57Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://90b8c33ba8e386561192621c51b6f11a2038f2f65f42617e7fe609db50157835
      image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver:TAG
      imageID: docker-pullable://368863656547.dkr.ecr.eu-central-1.amazonaws.com/appserver@sha256:2e78dd792677d61579db485f744ceb20c5900badc6f711434c97c0cae5a76e81
      lastState:
        terminated:
          containerID: docker://fed712c9b39594565245ccefb409d0304e118cb8097c5c1d0739189f36300d4d
          exitCode: 1
          finishedAt: 2018-03-27T10:53:21Z
          reason: Error
          startedAt: 2018-03-27T10:53:05Z
      name: appserver
      ready: true
      restartCount: 1
      state:
        running:
          startedAt: 2018-03-27T10:53:22Z
    hostIP: 172.20.96.228
    phase: Running
    podIP: 100.96.2.4
    qosClass: Burstable
    startTime: 2018-03-27T10:52:57Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"database-868d6dbff9","uid":"02925e2a-31ad-11e8-813c-02b0290a3f2c","apiVersion":"extensions","resourceVersion":"496"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        database'
    creationTimestamp: 2018-03-27T10:52:57Z
    generateName: database-868d6dbff9-
    labels:
      io.kompose.service: database
      pod-template-hash: "4248286995"
    name: database-868d6dbff9-gjxp2
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: database-868d6dbff9
      uid: 02925e2a-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "553"
    selfLink: /api/v1/namespaces/default/pods/database-868d6dbff9-gjxp2
    uid: 02930c43-31ad-11e8-813c-02b0290a3f2c
  spec:
    containers:
    - env:
      - name: POSTGRES_DB
        value: atsea
      - name: POSTGRES_PASSWORD_FILE
        value: /run/secrets/postgres_password
      - name: POSTGRES_USER
        value: gordonuser
      image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/database:TAG
      imagePullPolicy: IfNotPresent
      name: database
      ports:
      - containerPort: 5432
        protocol: TCP
      resources:
        requests:
          cpu: 100m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/secrets
        name: secrets-mount
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4kb7s
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: ip-172-20-77-119.eu-central-1.compute.internal
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: secrets-mount
      secret:
        defaultMode: 420
        items:
        - key: postgres-password
          path: postgres_password
        secretName: secrets
    - name: default-token-4kb7s
      secret:
        defaultMode: 420
        secretName: default-token-4kb7s
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:52:57Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:53:14Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:52:57Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://93eed67ed72f6e6fab963438e2d0c9162f95ede7d296170d5a63b6e7eed69077
      image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/database:TAG
      imageID: docker-pullable://368863656547.dkr.ecr.eu-central-1.amazonaws.com/database@sha256:224a0c2e32b6659e0c48971772433e0573e215067b34f7f4cd7d9dc7316ba5a0
      lastState: {}
      name: database
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-03-27T10:53:14Z
    hostIP: 172.20.77.119
    phase: Running
    podIP: 100.96.1.3
    qosClass: Burstable
    startTime: 2018-03-27T10:52:57Z
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"payment-gateway-77b675776f","uid":"029a295c-31ad-11e8-813c-02b0290a3f2c","apiVersion":"extensions","resourceVersion":"510"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        payment-gateway'
    creationTimestamp: 2018-03-27T10:52:57Z
    generateName: payment-gateway-77b675776f-
    labels:
      io.kompose.service: payment-gateway
      pod-template-hash: "3362313329"
    name: payment-gateway-77b675776f-67rpt
    namespace: default
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: payment-gateway-77b675776f
      uid: 029a295c-31ad-11e8-813c-02b0290a3f2c
    resourceVersion: "540"
    selfLink: /api/v1/namespaces/default/pods/payment-gateway-77b675776f-67rpt
    uid: 029bb3f8-31ad-11e8-813c-02b0290a3f2c
  spec:
    containers:
    - image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway:TAG
      imagePullPolicy: IfNotPresent
      name: payment-gateway
      resources:
        requests:
          cpu: 100m
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/secrets
        name: secrets-mount
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-4kb7s
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: ip-172-20-96-228.eu-central-1.compute.internal
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.alpha.kubernetes.io/notReady
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.alpha.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: secrets-mount
      secret:
        defaultMode: 420
        items:
        - key: payment-token
          path: payment_token
        secretName: secrets
    - name: default-token-4kb7s
      secret:
        defaultMode: 420
        secretName: default-token-4kb7s
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:52:57Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:53:07Z
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-03-27T10:52:57Z
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4524c5ba804b897227968b180e1a4513c94c33ae4707496e9ad2d4ed78d9677b
      image: 368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway:TAG
      imageID: docker-pullable://368863656547.dkr.ecr.eu-central-1.amazonaws.com/payment-gateway@sha256:7cb0fb3e8a70ea3e9305fb05a89ef35510bd1733f91146ae49d42f42a55115f6
      lastState: {}
      name: payment-gateway
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: 2018-03-27T10:53:06Z
    hostIP: 172.20.96.228
    phase: Running
    podIP: 100.96.2.5
    qosClass: Burstable
    startTime: 2018-03-27T10:52:57Z
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2018-03-27T10:54:57Z
    labels:
      io.kompose.service: appserver
    name: apploadbalancer
    namespace: default
    resourceVersion: "704"
    selfLink: /api/v1/namespaces/default/services/apploadbalancer
    uid: 49af186a-31ad-11e8-813c-02b0290a3f2c
  spec:
    clusterIP: 100.64.40.223
    externalTrafficPolicy: Cluster
    ports:
    - name: port-1
      nodePort: 30482
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: port-2
      nodePort: 30264
      port: 5005
      protocol: TCP
      targetPort: 5005
    selector:
      io.kompose.service: appserver
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a49af186a31ad11e8813c02b0290a3f2-1097142419.eu-central-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    labels:
      io.kompose.service: appserver
    name: appserver
    namespace: default
    resourceVersion: "489"
    selfLink: /api/v1/namespaces/default/services/appserver
    uid: 028f6170-31ad-11e8-813c-02b0290a3f2c
  spec:
    clusterIP: 100.67.252.193
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: "5005"
      port: 5005
      protocol: TCP
      targetPort: 5005
    selector:
      io.kompose.service: appserver
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    labels:
      io.kompose.service: database
    name: database
    namespace: default
    resourceVersion: "505"
    selfLink: /api/v1/namespaces/default/services/database
    uid: 0295dced-31ad-11e8-813c-02b0290a3f2c
  spec:
    clusterIP: 100.71.205.33
    ports:
    - name: "5432"
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      io.kompose.service: database
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: 2018-03-27T10:50:00Z
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "19"
    selfLink: /api/v1/namespaces/default/services/kubernetes
    uid: 98b04915-31ac-11e8-813c-02b0290a3f2c
  spec:
    clusterIP: 100.64.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert --file docker-compose-kubernetes.yml
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: 2018-03-27T10:52:57Z
    labels:
      io.kompose.service: payment-gateway
    name: payment-gateway
    namespace: default
    resourceVersion: "511"
    selfLink: /api/v1/namespaces/default/services/payment-gateway
    uid: 0299db18-31ad-11e8-813c-02b0290a3f2c
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      protocol: TCP
      targetPort: 55555
    selector:
      io.kompose.service: payment-gateway
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
